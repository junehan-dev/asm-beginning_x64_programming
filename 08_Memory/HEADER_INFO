readelf --headers ./srcs/memory.elf
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x401020
  Start of program headers:          64 (bytes into file)
  Start of section headers:          20344 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         13
  Size of section headers:           64 (bytes)
  Number of section headers:         35
  Section header string table index: 34

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000400318  00000318
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.gnu.pr[...] NOTE             0000000000400338  00000338
       0000000000000020  0000000000000000   A       0     0     8
  [ 3] .note.gnu.bu[...] NOTE             0000000000400358  00000358
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .note.ABI-tag     NOTE             000000000040037c  0000037c
       0000000000000020  0000000000000000   A       0     0     4
  [ 5] .gnu.hash         GNU_HASH         00000000004003a0  000003a0
       000000000000001c  0000000000000000   A       6     0     8
  [ 6] .dynsym           DYNSYM           00000000004003c0  000003c0
       0000000000000078  0000000000000018   A       7     1     8
  [ 7] .dynstr           STRTAB           0000000000400438  00000438
       000000000000006d  0000000000000000   A       0     0     1
  [ 8] .gnu.version      VERSYM           00000000004004a6  000004a6
       000000000000000a  0000000000000002   A       6     0     2
  [ 9] .gnu.version_r    VERNEED          00000000004004b0  000004b0
       0000000000000020  0000000000000000   A       7     1     8
  [10] .rela.dyn         RELA             00000000004004d0  000004d0
       0000000000000060  0000000000000018   A       6     0     8
  [11] .init             PROGBITS         0000000000401000  00001000
       000000000000001b  0000000000000000  AX       0     0     4
  [12] .text             PROGBITS         0000000000401020  00001020
       000000000000016a  0000000000000000  AX       0     0     16
  [13] .fini             PROGBITS         000000000040118c  0000118c
       000000000000000d  0000000000000000  AX       0     0     4
  [14] .rodata           PROGBITS         0000000000402000  00002000
       0000000000000004  0000000000000004  AM       0     0     4
  [15] .eh_frame_hdr     PROGBITS         0000000000402004  00002004
       000000000000001c  0000000000000000   A       0     0     4
  [16] .eh_frame         PROGBITS         0000000000402020  00002020
       0000000000000044  0000000000000000   A       0     0     8
  [17] .init_array       INIT_ARRAY       0000000000403e28  00002e28
       0000000000000008  0000000000000008  WA       0     0     8
  [18] .fini_array       FINI_ARRAY       0000000000403e30  00002e30
       0000000000000008  0000000000000008  WA       0     0     8
  [19] .dynamic          DYNAMIC          0000000000403e38  00002e38
       0000000000000190  0000000000000010  WA       7     0     8
  [20] .got              PROGBITS         0000000000403fc8  00002fc8
       0000000000000020  0000000000000008  WA       0     0     8
  [21] .got.plt          PROGBITS         0000000000403fe8  00002fe8
       0000000000000018  0000000000000008  WA       0     0     8
  [22] .data             PROGBITS         0000000000404000  00003000
       0000000000000039  0000000000000000  WA       0     0     8
  [23] .bss              NOBITS           000000000040403c  00003039
       000000000000003c  0000000000000000  WA       0     0     4
  [24] .comment          PROGBITS         0000000000000000  00003039
       0000000000000012  0000000000000001  MS       0     0     1
  [25] .debug_aranges    PROGBITS         0000000000000000  00003050
       0000000000000150  0000000000000000           0     0     16
  [26] .debug_info       PROGBITS         0000000000000000  000031a0
       00000000000009e8  0000000000000000           0     0     1
  [27] .debug_abbrev     PROGBITS         0000000000000000  00003b88
       00000000000002aa  0000000000000000           0     0     1
  [28] .debug_line       PROGBITS         0000000000000000  00003e32
       00000000000002a4  0000000000000000           0     0     1
  [29] .debug_str        PROGBITS         0000000000000000  000040d6
       0000000000000492  0000000000000001  MS       0     0     1
  [30] .debug_line_str   PROGBITS         0000000000000000  00004568
       000000000000014d  0000000000000001  MS       0     0     1
  [31] .debug_rnglists   PROGBITS         0000000000000000  000046b5
       0000000000000042  0000000000000000           0     0     1
  [32] .symtab           SYMTAB           0000000000000000  000046f8
       00000000000004e0  0000000000000018          33    35     8
  [33] .strtab           STRTAB           0000000000000000  00004bd8
       0000000000000232  0000000000000000           0     0     1
  [34] .shstrtab         STRTAB           0000000000000000  00004e0a
       000000000000016c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000400040 0x0000000000400040
                 0x00000000000002d8 0x00000000000002d8  R      0x8
  INTERP         0x0000000000000318 0x0000000000400318 0x0000000000400318
                 0x000000000000001c 0x000000000000001c  R      0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x0000000000000530 0x0000000000000530  R      0x1000
  LOAD           0x0000000000001000 0x0000000000401000 0x0000000000401000
                 0x0000000000000199 0x0000000000000199  R E    0x1000
  LOAD           0x0000000000002000 0x0000000000402000 0x0000000000402000
                 0x0000000000000064 0x0000000000000064  R      0x1000
  LOAD           0x0000000000002e28 0x0000000000403e28 0x0000000000403e28
                 0x0000000000000211 0x0000000000000250  RW     0x1000
  DYNAMIC        0x0000000000002e38 0x0000000000403e38 0x0000000000403e38
                 0x0000000000000190 0x0000000000000190  RW     0x8
  NOTE           0x0000000000000338 0x0000000000400338 0x0000000000400338
                 0x0000000000000020 0x0000000000000020  R      0x8
  NOTE           0x0000000000000358 0x0000000000400358 0x0000000000400358
                 0x0000000000000044 0x0000000000000044  R      0x4
  GNU_PROPERTY   0x0000000000000338 0x0000000000400338 0x0000000000400338
                 0x0000000000000020 0x0000000000000020  R      0x8
  GNU_EH_FRAME   0x0000000000002004 0x0000000000402004 0x0000000000402004
                 0x000000000000001c 0x000000000000001c  R      0x4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000002e28 0x0000000000403e28 0x0000000000403e28
                 0x00000000000001d8 0x00000000000001d8  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.gnu.property .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn 
   03     .init .text .fini 
   04     .rodata .eh_frame_hdr .eh_frame 
   05     .init_array .fini_array .dynamic .got .got.plt .data .bss 
   06     .dynamic 
   07     .note.gnu.property 
   08     .note.gnu.build-id .note.ABI-tag 
   09     .note.gnu.property 
   10     .eh_frame_hdr 
   11     
   12     .init_array .fini_array .dynamic .got .got.plt 
